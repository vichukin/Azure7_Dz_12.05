{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/BookService\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../Services/AuthorService\";\nimport * as i4 from \"@angular/router\";\nexport class BookEditComponent {\n  constructor(bookService, builder, authorService, router, route) {\n    this.bookService = bookService;\n    this.builder = builder;\n    this.authorService = authorService;\n    this.router = router;\n    this.route = route;\n    this.isFormSubmit = false;\n    this.myform = this.builder.group({\n      id: [''],\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      authorId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.authorService.getAuthors().subscribe(t => {\n      this.authors = t;\n    });\n    this.route.params.subscribe(t => {\n      this.id = t[\"id\"];\n      this.bookService.getBook(this.id).subscribe(t => {\n        this.book = t;\n        this.myform = this.builder.group({\n          id: [''],\n          title: [this.book.title, Validators.required],\n          description: [this.book.authorId, Validators.required],\n          authorId: [this.book.authorId, Validators.required]\n        });\n      });\n    });\n  }\n  onSubmit() {\n    this.isFormSubmit = true;\n    if (this.myform.get(\"authorId\")?.value != \"0\" && this.myform.valid) {\n      this.book = {\n        ...this.book,\n        ...this.myform.value\n      };\n      this.bookService.createBook(this.book);\n      this.router.navigateByUrl(\"/books\");\n    }\n  }\n}\nBookEditComponent.ɵfac = function BookEditComponent_Factory(t) {\n  return new (t || BookEditComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthorService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nBookEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookEditComponent,\n  selectors: [[\"app-book-edit\"]],\n  decls: 2,\n  vars: 0,\n  template: function BookEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"book-edit works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AAUnE,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,WAAwB,EAAUC,OAAoB,EAAUC,aAA4B,EAAUC,MAAc,EAAUC,KAAqB;IAAnJ,gBAAW,GAAXJ,WAAW;IAAuB,YAAO,GAAPC,OAAO;IAAuB,kBAAa,GAAbC,aAAa;IAAyB,WAAM,GAANC,MAAM;IAAkB,UAAK,GAALC,KAAK;IADvJ,iBAAY,GAAY,KAAK;IAE7B,WAAM,GAAc,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;MACrCC,EAAE,EAAE,CAAC,EAAE,CAAC;MACRC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MACtCE,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ;KACnC,CAAC;EANyK;EAQ3KG,QAAQ;IACN,IAAI,CAACT,aAAa,CAACU,UAAU,EAAE,CAACC,SAAS,CAACC,CAAC,IAAG;MAC5C,IAAI,CAACC,OAAO,GAAGD,CAAC;IAClB,CAAC,CAAC;IACF,IAAI,CAACV,KAAK,CAACY,MAAM,CAACH,SAAS,CAACC,CAAC,IAAG;MAC9B,IAAI,CAACR,EAAE,GAAGQ,CAAC,CAAC,IAAI,CAAC;MACjB,IAAI,CAACd,WAAW,CAACiB,OAAO,CAAC,IAAI,CAACX,EAAE,CAAC,CAACO,SAAS,CAACC,CAAC,IAAG;QAC9C,IAAI,CAACI,IAAI,GAAGJ,CAAC;QACb,IAAI,CAACK,MAAM,GAAG,IAAI,CAAClB,OAAO,CAACI,KAAK,CAAC;UAC/BC,EAAE,EAAE,CAAC,EAAE,CAAC;UACRC,KAAK,EAAE,CAAC,IAAI,CAACW,IAAI,CAACX,KAAK,EAAEV,UAAU,CAACW,QAAQ,CAAC;UAC7CC,WAAW,EAAE,CAAC,IAAI,CAACS,IAAI,CAACR,QAAQ,EAAEb,UAAU,CAACW,QAAQ,CAAC;UACtDE,QAAQ,EAAE,CAAC,IAAI,CAACQ,IAAI,CAACR,QAAQ,EAAEb,UAAU,CAACW,QAAQ;SACnD,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ;EACAY,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,IAAI,CAACF,MAAM,CAACG,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,IAAI,GAAG,IAAI,IAAI,CAACJ,MAAM,CAACK,KAAK,EAAE;MAClE,IAAI,CAACN,IAAI,GAAG;QAAE,GAAG,IAAI,CAACA,IAAI;QAAE,GAAG,IAAI,CAACC,MAAM,CAACI;MAAK,CAAE;MAClD,IAAI,CAACvB,WAAW,CAACyB,UAAU,CAAC,IAAI,CAACP,IAAI,CAAC;MACtC,IAAI,CAACf,MAAM,CAACuB,aAAa,CAAC,QAAQ,CAAC;;EAEvC;;AArCW5B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAA6B;EAAAC;EAAAC;EAAAC;IAAA;MCZ9BC,yBAAG;MAAAA,gCAAgB;MAAAA,iBAAI","names":["Validators","BookEditComponent","constructor","bookService","builder","authorService","router","route","group","id","title","required","description","authorId","ngOnInit","getAuthors","subscribe","t","authors","params","getBook","book","myform","onSubmit","isFormSubmit","get","value","valid","createBook","navigateByUrl","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\BookController\\book-edit\\book-edit.component.ts","C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\BookController\\book-edit\\book-edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BookService } from '../../Services/BookService';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Author } from '../../Models/Author';\nimport { Book } from '../../Models/Book';\nimport { AuthorService } from '../../Services/AuthorService';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent {\n  authors!: Author[]\n  book!: Book;\n  isFormSubmit: boolean = false;\n  constructor(private bookService: BookService, private builder: FormBuilder, private authorService: AuthorService, private router: Router, private route: ActivatedRoute) { }\n  myform: FormGroup = this.builder.group({\n    id: [''],\n    title: ['', Validators.required],\n    description: ['', Validators.required],\n    authorId: ['', Validators.required]\n  })\n  id!: string;\n  ngOnInit() {\n    this.authorService.getAuthors().subscribe(t => {\n      this.authors = t;\n    });\n    this.route.params.subscribe(t => {\n      this.id = t[\"id\"];\r\n      this.bookService.getBook(this.id).subscribe(t => {\r\n        this.book = t;\r\n        this.myform = this.builder.group({\n          id: [''],\n          title: [this.book.title, Validators.required],\n          description: [this.book.authorId, Validators.required],\n          authorId: [this.book.authorId, Validators.required]\n        })\r\n      })\r\n    })\n\n  }\n  onSubmit() {\n    this.isFormSubmit = true;\n    if (this.myform.get(\"authorId\")?.value != \"0\" && this.myform.valid) {\n      this.book = { ...this.book, ...this.myform.value }\n      this.bookService.createBook(this.book);\n      this.router.navigateByUrl(\"/books\");\n    }\n  }\n}\n","<p>book-edit works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}