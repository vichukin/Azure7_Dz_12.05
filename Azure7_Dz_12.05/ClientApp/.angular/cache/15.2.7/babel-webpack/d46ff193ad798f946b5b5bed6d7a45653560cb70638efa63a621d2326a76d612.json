{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../Services/AuthorService\";\nimport * as i3 from \"@angular/router\";\nexport class EditComponent {\n  constructor(formBuilder, authorService, router, route) {\n    this.formBuilder = formBuilder;\n    this.authorService = authorService;\n    this.router = router;\n    this.route = route;\n    this.isFormSubmitted = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(t => {\n      this.id = t[\"id\"];\n    });\n    this.authorService.getAuthor(this.id).subscribe(t => {\n      this.author;\n    });\n    console.log(this.author);\n    this.authorForm = this.formBuilder.group({\n      id: [this.id],\n      name: [this.author.name, Validators.required],\n      yearOfBirth: [this.author.yearOfBirth, Validators.required]\n    });\n  }\n  onSubmit() {\n    this.isFormSubmitted = true;\n    //console.log(this.authorForm.get(\"name\")?.valid);\n    if (this.authorForm.valid) {\n      this.author = {\n        ...this.author,\n        ...this.authorForm.value\n      };\n      //console.log(this.author);\n      this.authorService.createAuthor(this.author);\n      this.isFormSubmitted = false;\n      this.router.navigateByUrl(\"/\");\n    }\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthorService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"row\"], [1, \"col-4\"], [1, \"col\", \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-label\"], [1, \"text-danger\", 3, \"hidden\"], [\"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"yearOfBirth\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\", 4);\n      i0.ɵɵtext(6, \" Name: \");\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtext(8, \" Name is required! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.author.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\", 4)(12, \"div\", 5);\n      i0.ɵɵtext(13, \" Year of birth required! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \" Year of birth: \");\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.author.yearOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\")(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Create\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(19, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.authorForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"hidden\", !ctx.isFormSubmitted || ((tmp_1_0 = ctx.authorForm.get(\"name\")) == null ? null : tmp_1_0.valid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.author.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hidden\", !ctx.isFormSubmitted || !((tmp_3_0 = ctx.authorForm.get(\"name\")) == null ? null : tmp_3_0.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.author.yearOfBirth);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAWnE,OAAM,MAAOC,aAAa;EACxBC,YAAoBC,WAAwB,EAAUC,aAA4B,EAAUC,MAAc,EAAUC,KAAqB;IAArH,gBAAW,GAAXH,WAAW;IAAuB,kBAAa,GAAbC,aAAa;IAAyB,WAAM,GAANC,MAAM;IAAkB,UAAK,GAALC,KAAK;IAIzH,oBAAe,GAAY,KAAK;EAJ6G;EAK7IC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,CAAC,IAAG;MAC9B,IAAI,CAACC,EAAE,GAAGD,CAAC,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,IAAI,CAACN,aAAa,CAACQ,SAAS,CAAC,IAAI,CAACD,EAAE,CAAC,CAACF,SAAS,CAACC,CAAC,IAAG;MAClD,IAAI,CAACG,MAAM;IACb,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;IACxB,IAAI,CAACG,UAAU,GAAG,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;MACvCN,EAAE,EAAE,CAAC,IAAI,CAACA,EAAE,CAAC;MACbO,IAAI,EAAE,CAAC,IAAI,CAACL,MAAM,CAACK,IAAI,EAAElB,UAAU,CAACmB,QAAQ,CAAC;MAC7CC,WAAW,EAAE,CAAC,IAAI,CAACP,MAAM,CAACO,WAAW,EAAEpB,UAAU,CAACmB,QAAQ;KAC3D,CAAC;EAEJ;EACAE,QAAQ;IACN,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B;IACA,IAAI,IAAI,CAACN,UAAU,CAACO,KAAK,EAAE;MACzB,IAAI,CAACV,MAAM,GAAG;QAAE,GAAG,IAAI,CAACA,MAAM;QAAE,GAAG,IAAI,CAACG,UAAU,CAACQ;MAAK,CAAE;MAC1D;MACA,IAAI,CAACpB,aAAa,CAACqB,YAAY,CAAC,IAAI,CAACZ,MAAM,CAAC;MAC5C,IAAI,CAACS,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACjB,MAAM,CAACqB,aAAa,CAAC,GAAG,CAAC;;EAGlC;;AAhCWzB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1BC,8BAAiB;MACfA,yBAAyB;MACzBA,8BAAsB;MACWA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACpDD,2BAAK;MAGDA,uBACA;MAAAA,8BAAsF;MACpFA,mCACF;MAAAA,iBAAM;MACNA,gCAAkE;MAA5BA;QAAA;MAAA,EAAyB;MAA/DA,iBAAkE;MAGtEA,4BAAK;MAICA,0CACF;MAAAA,iBAAM;MACNA,iCACA;MAAAA,iCAA8F;MAAjDA;QAAA;MAAA,EAAgC;MAA7EA,iBAA8F;MAGlGA,4BAAK;MAC2CA,uBAAM;MAAAA,iBAAS;MAKnEA,0BAAyB;MAC3BA,iBAAM;;;;;MA5BIA,eAAwB;MAAxBA,0CAAwB;MAKCA,eAA4D;MAA5DA,wHAA4D;MAG/CA,eAAyB;MAAzBA,yCAAyB;MAMtCA,eAA6D;MAA7DA,yHAA6D;MAIzCA,eAAgC;MAAhCA,gDAAgC","names":["Validators","EditComponent","constructor","formBuilder","authorService","router","route","ngOnInit","params","subscribe","t","id","getAuthor","author","console","log","authorForm","group","name","required","yearOfBirth","onSubmit","isFormSubmitted","valid","value","createAuthor","navigateByUrl","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\AuthorController\\edit\\edit.component.ts","C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\AuthorController\\edit\\edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthorService } from '../../Services/AuthorService';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Author } from '../../Models/Author';\r\nimport { keyframes } from '@angular/animations';\r\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent {\n  constructor(private formBuilder: FormBuilder, private authorService: AuthorService, private router: Router, private route: ActivatedRoute) { }\n  authorForm!: FormGroup;\n  id!: string\n  author!: Author;\n  isFormSubmitted: boolean = false\n  ngOnInit() {\n    this.route.params.subscribe(t => {\r\n      this.id = t[\"id\"];\r\n    });\n    this.authorService.getAuthor(this.id).subscribe(t => {\n      this.author;\r\n    });\n    console.log(this.author);\n    this.authorForm = this.formBuilder.group({\n      id: [this.id],\n      name: [this.author.name, Validators.required],\n      yearOfBirth: [this.author.yearOfBirth, Validators.required]\n    });\n\n  }\n  onSubmit() {\n    this.isFormSubmitted = true;\n    //console.log(this.authorForm.get(\"name\")?.valid);\n    if (this.authorForm.valid) {\n      this.author = { ...this.author, ...this.authorForm.value };\n      //console.log(this.author);\n      this.authorService.createAuthor(this.author);\n      this.isFormSubmitted = false;\n      this.router.navigateByUrl(\"/\")\n    }\n\n  }\n}\n","\r\n<div class=\"row\">\r\n  <div class=\"col-4\"></div>\r\n  <div class=\"col mt-5\">\r\n    <form [formGroup]=\"authorForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div>\r\n\r\n        <label class=\"form-label\">\r\n          Name:\r\n          <div class=\"text-danger\" [hidden]=\"!isFormSubmitted || authorForm.get('name')?.valid\">\r\n            Name is required!\r\n          </div>\r\n          <input class=\"form-control\" id=\"name\" [(ngModel)]=\"author.name\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n\r\n        <label class=\"form-label\">\r\n          <div class=\"text-danger\" [hidden]=\"!isFormSubmitted || !authorForm.get('name')?.valid\">\r\n            Year of birth required!\r\n          </div>\r\n          Year of birth:\r\n          <input class=\"form-control\" id=\"yearOfBirth\" [(ngModel)]=\"author.yearOfBirth\" type=\"number\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-success\">Create</button>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n  <div class=\"col-4\"></div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}