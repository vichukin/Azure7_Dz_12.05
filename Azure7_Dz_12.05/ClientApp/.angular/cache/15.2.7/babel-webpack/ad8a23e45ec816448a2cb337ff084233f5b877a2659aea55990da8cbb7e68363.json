{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Book } from '../Models/Book';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n  }\n  getBooks() {\n    return this.http.get(`https://localhost:7079/api/Book`).pipe(map(t => {\n      return t.map(data => {\n        return new Book(data.id, data.title, data.description, data.authorId, data.author);\n      });\n    }));\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;AAIpC,SAASC,IAAI,QAAQ,gBAAgB;;;AAErC,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EACxCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,iCAAiC,CAAC,CAACC,IAAI,CAClEP,GAAG,CACAQ,CAAS,IAAI;MACZ,OAAOA,CAAC,CAACR,GAAG,CAACS,IAAI,IAAG;QAClB,OAAO,IAAIR,IAAI,CAACQ,IAAI,CAACC,EAAE,EAAED,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,WAAW,EAAEH,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,MAAM,CAAC;MACpF,CAAC,CAAC;IAAA,CAAC,CAAC,CACT;EACH;;AAVWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;AAAA","names":["map","Book","BookService","constructor","http","getBooks","get","pipe","t","data","id","title","description","authorId","author","factory"],"sourceRoot":"","sources":["C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\Services\\BookService.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Author } from '../Models/Author';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Book } from '../Models/Book';\r\n@Injectable()\r\nexport class BookService {\r\n  constructor(private http: HttpClient) { }\r\n  getBooks():Observable<Book[]> {\r\n    return this.http.get<Book[]>(`https://localhost:7079/api/Book`).pipe(\r\n      map(\r\n        (t: Book[]) => {\r\n          return t.map(data => {\r\n            return new Book(data.id, data.title, data.description, data.authorId, data.author);\r\n          })})\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}