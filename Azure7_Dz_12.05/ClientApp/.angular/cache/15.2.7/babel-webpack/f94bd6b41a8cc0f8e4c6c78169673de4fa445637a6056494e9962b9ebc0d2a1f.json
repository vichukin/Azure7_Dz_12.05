{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/BookService\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../Services/AuthorService\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction BookEditComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class BookEditComponent {\n  constructor(bookService, builder, authorService, router, route) {\n    this.bookService = bookService;\n    this.builder = builder;\n    this.authorService = authorService;\n    this.router = router;\n    this.route = route;\n    this.isFormSubmit = false;\n    this.myform = this.builder.group({\n      id: [''],\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      authorId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.authorService.getAuthors().subscribe(t => {\n      this.authors = t;\n    });\n    this.route.params.subscribe(t => {\n      this.id = t[\"id\"];\n      this.bookService.getBook(this.id).subscribe(t => {\n        this.book = t;\n        this.myform = this.builder.group({\n          id: [''],\n          title: [this.book.title, Validators.required],\n          description: [this.book.description, Validators.required],\n          authorId: [this.book.authorId, Validators.required]\n        });\n      });\n    });\n  }\n  onSubmit() {\n    this.isFormSubmit = true;\n    if (this.myform.get(\"authorId\")?.value != \"0\" && this.myform.valid) {\n      this.book = {\n        ...this.book,\n        ...this.myform.value\n      };\n      this.bookService.editBook(this.book);\n      this.router.navigateByUrl(\"/books\");\n    }\n  }\n}\nBookEditComponent.ɵfac = function BookEditComponent_Factory(t) {\n  return new (t || BookEditComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthorService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nBookEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookEditComponent,\n  selectors: [[\"app-book-edit\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[1, \"row\"], [1, \"col-4\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-label\", \"w-100\"], [1, \"text-danger\", 3, \"hidden\"], [\"formControlName\", \"title\", \"required\", \"\", 1, \"form-control\", \"w-100\"], [\"formControlName\", \"authorId\", 1, \"form-control\", \"w-100\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"description\", \"required\", \"\", 1, \"form-control\", \"w-100\"], [1, \"btn-group\", \"w-100\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"w-100\"], [\"type\", \"submit\", \"accesskey\", \"['/books']\", 1, \"btn\", \"btn-secondary\", \"w-100\"], [3, \"value\"]],\n  template: function BookEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"h2\", 2);\n      i0.ɵɵtext(4, \"Book\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function BookEditComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \" Title: \");\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵtext(10, \"Title is required!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\")(13, \"label\", 4);\n      i0.ɵɵtext(14, \" Author: \");\n      i0.ɵɵelementStart(15, \"div\", 5);\n      i0.ɵɵtext(16, \"Author is required!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 7);\n      i0.ɵɵtemplate(18, BookEditComponent_option_18_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 4);\n      i0.ɵɵtext(21, \" Description: \");\n      i0.ɵɵelementStart(22, \"div\", 5);\n      i0.ɵɵtext(23, \"Description is required!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"textarea\", 9);\n      i0.ɵɵtext(25, \" \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"button\", 11);\n      i0.ɵɵtext(28, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"a\", 12);\n      i0.ɵɵtext(30, \"Back\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(31, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.myform);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"hidden\", !ctx.isFormSubmit || ((tmp_1_0 = ctx.myform.get(\"title\")) == null ? null : tmp_1_0.valid));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"hidden\", !ctx.isFormSubmit || ((tmp_2_0 = ctx.myform.get(\"authorId\")) == null ? null : tmp_2_0.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.authors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"hidden\", !ctx.isFormSubmit || ((tmp_4_0 = ctx.myform.get(\"description\")) == null ? null : tmp_4_0.valid));\n    }\n  },\n  dependencies: [i5.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","BookEditComponent","constructor","bookService","builder","authorService","router","route","group","id","title","required","description","authorId","ngOnInit","getAuthors","subscribe","t","authors","params","getBook","book","myform","onSubmit","isFormSubmit","get","value","valid","editBook","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\BookController\\book-edit\\book-edit.component.ts","C:\\Users\\artuo\\source\\repos\\Azure7_Dz_12.05\\Azure7_Dz_12.05\\ClientApp\\src\\app\\BookController\\book-edit\\book-edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BookService } from '../../Services/BookService';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Author } from '../../Models/Author';\nimport { Book } from '../../Models/Book';\nimport { AuthorService } from '../../Services/AuthorService';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent {\n  authors!: Author[]\n  book!: Book;\n  isFormSubmit: boolean = false;\n  constructor(private bookService: BookService, private builder: FormBuilder, private authorService: AuthorService, private router: Router, private route: ActivatedRoute) { }\n  myform: FormGroup = this.builder.group({\n    id: [''],\n    title: ['', Validators.required],\n    description: ['', Validators.required],\n    authorId: ['', Validators.required]\n  })\n  id!: string;\n  ngOnInit() {\n    this.authorService.getAuthors().subscribe(t => {\n      this.authors = t;\n    });\n    this.route.params.subscribe(t => {\n      this.id = t[\"id\"];\r\n      this.bookService.getBook(this.id).subscribe(t => {\r\n        this.book = t;\r\n        this.myform = this.builder.group({\n          id: [''],\n          title: [this.book.title, Validators.required],\n          description: [this.book.description, Validators.required],\n          authorId: [this.book.authorId, Validators.required]\n        })\r\n      })\r\n    })\n\n  }\n  onSubmit() {\n    this.isFormSubmit = true;\n    if (this.myform.get(\"authorId\")?.value != \"0\" && this.myform.valid) {\n      this.book = { ...this.book, ...this.myform.value }\n      this.bookService.editBook(this.book);\n      this.router.navigateByUrl(\"/books\");\n    }\n  }\n}\n","<div class=\"row\">\r\n  <div class=\"col-4\"></div>\r\n  <div class=\"col-4\">\r\n    <h2 class=\"text-center\">Book</h2>\r\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"myform\">\r\n      <div>\r\n        <label class=\"form-label w-100\">\r\n          Title:\r\n          <div class=\"text-danger\" [hidden]=\"!isFormSubmit||myform.get('title')?.valid\">Title is required!</div>\r\n          <input class=\"form-control w-100\" formControlName=\"title\" required />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label class=\"form-label w-100\">\r\n          Author:\r\n          <div class=\"text-danger\" [hidden]=\"!isFormSubmit||myform.get('authorId')?.valid\">Author is required!</div>\r\n          <select class=\"form-control w-100\" formControlName=\"authorId\">\r\n            <option *ngFor=\"let item of authors\" [value]=\"item.id\">{{item.name}}</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label class=\"form-label w-100\">\r\n          Description:\r\n          <div class=\"text-danger\" [hidden]=\"!isFormSubmit||myform.get('description')?.valid\">Description is required!</div>\r\n          <textarea class=\"form-control w-100\" formControlName=\"description\" required> </textarea>\r\n        </label>\r\n      </div>\r\n      <div class=\"btn-group w-100\">\r\n        <button type=\"submit\" class=\"btn btn-success w-100\">Save</button>\r\n        <a type=\"submit\" class=\"btn btn-secondary w-100\" accesskey=\"['/books']\">Back</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"col-4\"></div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}